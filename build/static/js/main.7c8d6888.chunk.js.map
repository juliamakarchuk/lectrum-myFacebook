{"version":3,"sources":["components/HOC/withProfile.js","socket/init.js","components/StatusBar/index.jsx","components/Composer/index.jsx","components/Like/index.jsx","components/Post/index.jsx","components/Spinner/index.jsx","components/Catcher/index.jsx","components/Postman/index.jsx","instruments/index.js","config/api.js","components/Feed/index.jsx","App.jsx","serviceWorker.js","index.js","components/StatusBar/styles.module.css","components/Like/styles.module.css","components/Post/styles.module.css","components/Postman/styles.module.css","components/Composer/styles.module.css","components/Spinner/styles.module.css","components/Catcher/styles.module.css","components/Feed/styles.module.css","theme/assets/lisa.png"],"names":["createContext","Provider","Consumer","withProfile","Enhanceable","_Component","WithProfile","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","react_default","a","createElement","context","assign","props","Component","socket","io","path","state","online","_animateStatusBarEnter","statusBar","fromTo","opacity","_this2","on","setState","removeListener","_cx","_this$props","avatar","currentUserFirstName","currentUserLastName","statusStyle","cx","Styles","status","defineProperty","offline","statusMessage","react_transition_group","in","appear","timeout","onEnter","className","src","comment","_updateComment","event","target","_handleFormSubmit","preventDefault","_submitComment","_createPost","_submitOnEnter","composer","onSubmit","placeholder","concat","onChange","onKeyPress","type","showLikers","_showLikers","_hideLikers","_likePost","id","_getLikeByMe","_this$props2","likes","some","_ref","firstName","lastName","_getLikeStyles","likeByMe","classNames","icon","liked","_getLikersList","likesJSX","map","_ref2","length","_getLikesDescription","_this$props3","likeStyles","likerList","likesDescription","like","onClick","showLiker","onMouseEnter","onMouseLeave","hideLikers","_getCross","cross","_removePost","created","post","moment","unix","format","components_Like","portal","document","getElementById","Spinner","isSpinning","createPortal","spinner","Catcher","error","stack","console","log","componentStack","catcher","children","_animatePostmanEnter","postman","rotationY","_animatePostmanExit","rotation","onEntering","onEntered","image","delay","duration","undefined","Promise","resolve","setTimeout","TOKEN","api","GROUP_ID","Error","getFullApiUrl","posts","_setPostsFetchingState","_fetchPosts","_callee","response","regenerator_default","wrap","_context","prev","next","fetch","method","sent","json","data","stop","_callee2","_ref4","_context2","headers","Content-Type","Authorization","body","JSON","stringify","_ref5","toConsumableArray","_callee3","_ref7","likedPost","_context3","_ref8","_callee4","_context4","_ref10","filter","_animateComposerEnter","rotationX","emit","postJSON","_JSON$parse","parse","createdPost","meta","authorFirstName","authorLastName","_ref11","_JSON$parse2","removePost","_ref12","_JSON$parse3","_ref13","_this3","_this$state","postsJSX","Catcher_Catcher","components_Post","feed","Spinner_Spinner","components_StatusBar","components_Composer","components_Postman","options","App","components_Feed","Boolean","window","location","hostname","match","ReactDOM","render","App_App","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.7c8d6888.chunk.js","sourcesContent":["//Core\nimport React, { createContext, Component } from 'react';\n\nconst { Provider, Consumer } = createContext();\n\nconst withProfile = (Enhanceable) => {\n   return class WithProfile extends Component {\n       render() {\n           return (\n               <Consumer>\n                {(context)=> <Enhanceable {...context} {...this.props} />}\n               </Consumer>\n           )\n       }\n   }\n}\n\nexport { Provider, Consumer, withProfile }","import io from 'socket.io-client';\n\nexport const socket = io('https://lab.lectrum.io',{\n    path: '/react/ws',\n});","import React, { Component } from 'react';\nimport { Transition } from 'react-transition-group';\nimport { fromTo } from 'greensock';\n\nimport { withProfile } from '../HOC/withProfile'\nimport cx from 'classnames';\nimport Styles from './styles.module.css';\nimport { socket } from '../../socket/init';\n\n\nclass StatusBar extends Component {\n    state={\n        online: false\n    }\n\n    componentDidMount(){\n        socket.on('connect', ()=>{\n            this.setState({ \n                online: true,\n            })\n        });\n        socket.on('disconnect',()=>{\n            this.setState({\n                online: false\n            })\n        })\n    }\n    componentWillUnmount () {\n        socket.removeListener('connect');\n        socket.removeListener('disconnect');\n    }\n\n    _animateStatusBarEnter = (statusBar) =>{\n        fromTo(statusBar, 1, { opacity: 0 }, { opacity: 1 })\n    }\n    render () {\n        const { avatar, currentUserFirstName, currentUserLastName} = this.props;\n        const { online } = this.state;\n        const statusStyle = cx(Styles.status,{\n            [Styles.online]: online,\n            [Styles.offline]: !online \n        });\n        const statusMessage = online ? 'Online' : 'Offline';\n       return(\n           <Transition \n              in\n              appear\n              timeout = { 1000 }\n              onEnter = { this._animateStatusBarEnter }>\n              <section className = {Styles.statusBar}>\n              <div className = {statusStyle}>\n                  <div>{statusMessage}</div>\n                  <span />\n              </div>\n                 <button>\n                    <img src = { avatar }/>\n                    <span> { currentUserFirstName } </span>\n                     &nbsp;\n                    <span> { currentUserLastName } </span>\n                 </button>\n                </section>\n            </Transition>\n       )\n    }\n}\nexport default withProfile(StatusBar);","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withProfile } from '../HOC/withProfile'\n\nimport Styles from './styles.module.css';\n\n\nclass Composer extends Component{\n    static propTypes = {\n        _createPost: PropTypes.func.isRequired\n     }\n    state = {\n        comment: ''\n    };\n\n    _updateComment = (event) =>{\n        this.setState({\n            comment: event.target.value\n        })\n    }\n    _handleFormSubmit = (event) =>{\n        event.preventDefault();\n        this._submitComment();\n    }\n\n    _submitComment = () =>{\n        const { comment } = this.state;\n\n        if(!comment) return null;\n        this.props._createPost(comment);\n\n        this.setState({\n            comment: ''\n        })\n    }\n    _submitOnEnter = (event) => {\n        const enterKey = event.key ==='Enter';\n        if(enterKey) {\n            event.preventDefault();\n            this._submitComment();\n        }\n    }\n    render() {\n        const { comment } = this.state;\n        const { avatar, currentUserFirstName } = this.props;\n        return (\n              <section className = { Styles.composer }>\n                 <section>\n                     <img src = {avatar }/>\n                     <form onSubmit= { this._handleFormSubmit }>\n                       <textarea placeholder = \n                       {`What are you thinking about, ${ currentUserFirstName }`} \n                       value = { comment } \n                       onChange = { this._updateComment } \n                       onKeyPress = { this._submitOnEnter }/>\n                       <input type = \"submit\" value = 'Post'/>\n                    </form>\n                  </section>\n               </section>\n        )\n    }\n}\n\nexport default withProfile(Composer);","import React, { Component } from 'react';\nimport { string, func, arrayOf, shape } from 'prop-types';\nimport classNames from 'classnames';\n\nimport { withProfile } from '../HOC/withProfile';\n\nimport Styles from './styles.module.css';\n\n class Like extends Component {\n    static propTypes = {\n        _likePost: func.isRequired,\n        id:        string.isRequired,\n        likes:     arrayOf(shape({\n                   firstName: string.isRequired,\n                   lastName: string.isRequired\n                   })).isRequired  \n    }\n    state = {\n        showLikers: false\n    }\n\n    _showLikers = () => {\n        this.setState({\n            showLikers: true\n        })\n    }\n\n    _hideLikers = () => {\n        this.setState({\n            showLikers: !this.state\n        })\n    }\n\n    _likePost = () => {\n        \n        const { _likePost, id } = this.props;\n\n        _likePost (id);\n    }\n\n    _getLikeByMe =() => {\n        const {currentUserFirstName, currentUserLastName, likes} = this.props;\n\n        return likes.some(({firstName, lastName})=>{\n            return(\n                `${firstName} ${lastName}` \n                === `${currentUserFirstName} ${currentUserLastName}`\n            )\n        })\n    }\n    _getLikeStyles = () => {\n        const likeByMe = this._getLikeByMe();\n\n        return classNames(Styles.icon, {\n            [Styles.liked]: likeByMe,\n        })\n    }\n    _getLikersList = () => {\n        const { showLikers } = this.state;\n        const { likes } = this.props;\n\n        const likesJSX = likes.map(({firstName, lastName, id})=>\n        (<li key = {id}>\n           {`${firstName} ${lastName}`}\n        </li>));\n\n        return likes.length && showLikers ?  <ul>{likesJSX}</ul> : null;\n    }\n\n    _getLikesDescription = () => {\n        const {currentUserFirstName, currentUserLastName, likes} = this.props;\n\n        const likeByMe = this._getLikeByMe();\n\n        if(likes.length ===1 && likeByMe) {\n            return `${currentUserFirstName} ${currentUserLastName}`\n        } else if (likes.length === 2 && likeByMe){\n            return `You and ${likes.length-1} other`;\n        } else if (likeByMe){\n            return `You and ${likes.length-1} others`;\n        }\n        return likes.length;\n    }\n    render(){\n\n        const likeStyles = this._getLikeStyles();\n        const likerList = this._getLikersList();\n        const likesDescription = this._getLikesDescription();\n\n        return (\n            <section className = { Styles.like }>\n                <span className = { likeStyles } \n                onClick = { this._likePost }>Like</span>\n                <div className = {Styles.showLiker}>\n                {likerList}\n                    <span\n                    onMouseEnter = { this._showLikers }\n                    onMouseLeave = { this.hideLikers }>\n                     {likesDescription}\n                    </span>\n                </div>\n            </section>\n        )\n    }\n}\nexport default withProfile( Like );","import React, {Component} from 'react';\nimport moment from 'moment';\nimport { func, string, number, array } from 'prop-types';\n\nimport { withProfile } from '../HOC/withProfile';\nimport Like from '../Like'\n\nimport Styles from './styles.module.css';\nclass Post extends Component{\n\n    static propTypes = {\n        id:        string.isRequired,\n        comment:   string.isRequired,\n        _likePost: func.isRequired,\n        _removePost: func.isRequired,\n        likes:     array.isRequired\n    }\n    _getCross = ()=>{\n        const { firstName, lastName, currentUserLastName, currentUserFirstName} = this.props;\n\n        return `${firstName} ${lastName}` === `${currentUserFirstName} ${currentUserLastName}` \n        ? <span className = { Styles.cross } onClick = {()=>this.props._removePost(this.props.id)}></span>\n        : null\n    }\n    render() {\n        const { \n            comment,\n            created, \n            _likePost, \n            id, \n            likes, \n            avatar, \n            firstName,\n            lastName } \n            = this.props;\n        \n        const cross = this._getCross();\n        return (\n                    <section className = { Styles.post } >\n                    {cross}\n                        <img src = { avatar } />\n                        <a> {`${ firstName } ${ lastName }`} </a>\n                        <time>{moment.unix(created).format('MMMM D h:mm:ss a')}</time>\n                        <p>{ comment }</p>\n                        <Like \n                          _likePost = { _likePost } \n                          id ={ id } \n                          likes={ likes }\n                        />\n                   </section>\n        )\n    }\n}\n\nexport default withProfile(Post);","import React, {Component} from 'react';\nimport { createPortal } from 'react-dom';\n\nimport Styles from './styles.module.css';\n\nconst portal = document.getElementById('spinner');\n\nexport default class Spinner extends Component {\n\n    render () {\n        const { isSpinning } = this.props;\n        return createPortal( \n        isSpinning ? <div className = {Styles.spinner} /> : null, portal)\n\n    }\n}","import React, { Component } from 'react';\n\nimport { object } from 'prop-types';\nimport Styles from './styles.module.css';\n\n\nexport default class Catcher extends Component{\n    static propTypes = {\n        children: object.isRequired\n    }\n\n    state = {\n        error: false\n    }\n\n    componentDidCatch (error, stack) {\n      console.log('ERROR', error);\n      console.log('STACKTRACE', stack.componentStack);\n\n      this.setState({\n          error: true\n      })\n    }\n    render(){ \n        if(this.state.error){\n            return(\n                <section className ={ Styles.catcher }>\n                  <span> A mysterious error occured</span>\n                  <p>\n                      Our space engineers are fixing that already\n                  </p>\n                </section>\n            )\n        }\n        return this.props.children;\n    }\n}","import React, {Component} from 'react';\nimport { Transition } from 'react-transition-group';\nimport { fromTo } from 'greensock';\n\nimport Styles from './styles.module.css';\nimport { withProfile } from '../HOC/withProfile';\n\nclass Postman extends Component {\n\n    _animatePostmanEnter = (postman) => {\n        fromTo(postman,\n               1,\n               { opacity: 0, rotationY: -100 },\n               { opacity: 1, rotationY: 0 })\n    }\n    _animatePostmanExit = (postman) => {\n       fromTo(postman,\n              1,\n              { opacity: 1, rotationY: -100 },\n              { opacity: 0, rotation: -360 }\n            )\n    }\n   render(){\n\n    const {avatar, currentUserFirstName} = this.props;\n\n    return (\n        <Transition\n        in\n        appear\n        timeout = { 5000 }\n        onEntering = { this._animatePostmanEnter }\n        onEntered = { this._animatePostmanExit }\n        >\n        <section className = { Styles.postman }>\n          <img src = { avatar } className = { Styles.image }/>\n          <span> Wellcome online, { currentUserFirstName }</span>\n        </section>\n        </Transition>\n    )\n   }\n\n}\n\n\nexport default withProfile(Postman);","export const sum = (operand1, operand2) => {\n    if (typeof operand1 !== 'number') {\n        throw new Error('Operand 1 should be a number.');\n    } else if (typeof operand2 !== 'number') {\n        throw new Error('Operand 2 should be a number.');\n    }\n\n    return operand1 + operand2;\n};\n\nexport const delay = (duration = 1000) => {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n};\n\nexport const getUniqueID = (length = 15) => {\n    if (typeof length !== 'number') {\n        throw new Error('The function argument should be a number!');\n    }\n\n    let text = '';\n    const possible\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (let i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return text;\n};\n\nexport const getFullApiUrl = (api, GROUP_ID) => {\n    if (typeof api !== 'string' || typeof GROUP_ID !== 'string') {\n        throw new Error(\n            '\\'api\\' and \\'GROUP_ID\\' arguments passed should be a string!',\n        );\n    }\n\n    return `${api}/${GROUP_ID}`;\n};\n","// Core\nimport { getFullApiUrl } from '../instruments';\n\nconst GROUP_ID = 'wcrigmc5r7i8';\nconst TOKEN = 'd1wgjr4rzp';\nconst url = 'https://lab.lectrum.io/react/api';\nconst api = getFullApiUrl(url, GROUP_ID);\n\nexport { GROUP_ID, TOKEN, api, url };\n","import React, {Component} from 'react';\nimport { Transition } from 'react-transition-group';\nimport { fromTo } from 'greensock';\n\nimport { withProfile } from '../HOC/withProfile';\nimport StatusBar from '../StatusBar';\nimport Composer from '../Composer';\nimport Post from '../Post';\nimport Spinner from '../Spinner';\nimport Catcher from '../Catcher';\nimport Postman from '../Postman';\n\nimport Styles from './styles.module.css';\nimport { delay } from '../../instruments/index';\nimport { api, TOKEN, GROUP_ID } from '../../config/api';\nimport { socket } from '../../socket/init';\n\n \nclass Feed extends Component{\n    state = {\n        posts: [],\n        isSpinning: false\n    }\n\n    componentDidMount (){\n        const { currentUserFirstName, currentUserLastName } = this.props;\n        this._fetchPosts();\n        socket.emit('join', GROUP_ID);\n\n        socket.on('create', (postJSON)=>{\n            const { data: createdPost, meta } = JSON.parse(postJSON);\n           \n            if(`${currentUserFirstName} ${currentUserLastName}` \n            !==`${meta.authorFirstName} ${meta.authorLastName}`){\n              this.setState(({ posts })=>({\n                  posts: [createdPost, ...posts],\n              }))\n            }\n        });\n        socket.on('remove', (postJSON)=>{\n            const { data: removePost, meta } = JSON.parse(postJSON);\n           \n            if(`${currentUserFirstName} ${currentUserLastName}` \n            !==`${meta.authorFirstName} ${meta.authorLastName}`){\n              this.setState(({ posts })=>({\n                  posts: posts.filter((post)=>post.id!== removePost.id)\n              }))\n            }\n        });\n\n        socket.on('like', (postJSON)=>{\n            const { data: likedPost, meta } = JSON.parse(postJSON);\n            if(`${currentUserFirstName} ${currentUserLastName}` \n            !==`${meta.authorFirstName} ${meta.authorLastName}`){\n                this.setState(( {posts }) =>({\n                    posts: posts.map(post=> post.id === likedPost.id ? likedPost : post)\n                }))\n            }\n        });\n    }\n    componentWillUnMount (){\n        socket.removeListener('create');\n        socket.removeListener('remove');\n        socket.removeListener('like');\n    }\n\n    _setPostsFetchingState = ( state ) =>{\n        this.setState({\n            isSpinning : state\n        })\n    }\n    \n    _fetchPosts = async () =>{\n        this._setPostsFetchingState(true);\n\n        const response = await fetch(api, {\n            method: 'GET'\n        });\n        \n        const { data: posts } = await response.json();\n\n        this.setState({\n            posts, \n            isSpinning: false\n        })\n    }\n\n    _createPost = async (comment) =>{\n        this._setPostsFetchingState(true);\n\n        const response = await fetch (api, {\n            method: 'POST',\n            headers:{\n                'Content-Type' : 'application/json',\n                Authorization: TOKEN\n            },\n            body: JSON.stringify({ comment })\n        });\n\n        const { data: post } = await response.json(); \n        await delay (1600);\n\n        this.setState(({ posts })=>({\n            posts: [post, ...posts],\n            isSpinning: false\n        }))\n    }\n    \n    _likePost = async (id) =>{\n    this._setPostsFetchingState(true);\n    const response = await fetch (`${api}/${id}`, {\n        method: 'PUT',\n        headers:{\n            Authorization: TOKEN\n        },\n    });\n    const { data: likedPost } = await response.json();\n\n    this.setState(( {posts }) =>({\n        posts: posts.map(post=> post.id === likedPost.id ? likedPost : post),\n        isSpinning: false\n    }))\n    }\n\n    _removePost = async (id) =>{\n      this._setPostsFetchingState(true);\n\n      const response = await fetch(`${api}/${id}`,{\n        method: 'PUT',\n        headers:{\n            Authorization: TOKEN\n        },\n      });\n\n      this.setState(( {posts }) =>({\n        posts: posts.filter((post)=> post.id!==id),\n        isSpinning: false\n    }))\n    }\n\n    _animateComposerEnter = (composer) =>{\n        fromTo(composer,\n                1,\n                { opacity: 0, rotationX: 50 },\n                { opacity: 1, rotationX: 0 });\n    };\n\n    render () {\n        const { posts , isSpinning } = this.state;\n\n        const postsJSX = posts.map((post)=>{\n            return (\n            <Catcher key = {post.id}>\n            <Post \n                {...post} \n                _likePost = { this._likePost } \n                _removePost = { this._removePost }/>\n            </Catcher>\n            )\n        });\n\n        return(\n            <section className = { Styles.feed }>\n                <Spinner isSpinning = { isSpinning }/>\n                <StatusBar />\n                <Transition\n                  in\n                  appear\n                  timeout = { 2000 }\n                  onEnter = { this._animateComposerEnter }>\n                   <Composer _createPost = { this._createPost }/>\n                </Transition>\n                <Postman />\n                {postsJSX}\n            </section>\n        )\n    }\n}\nexport default withProfile(Feed);","import React, {Component} from 'react';\n\nimport Feed from './components/Feed';\nimport Catcher from './components/Catcher';\nimport {Provider} from './components/HOC/withProfile';\n\nimport './theme/init.css'\nimport avatar from './theme/assets/lisa.png';\n\nconst options = {\n    avatar,\n    currentUserFirstName: 'Юлия',\n    currentUserLastName: 'Макарчук'\n}\n\nexport default class App extends Component {\n\n    render () {\n        return (\n            <Catcher>\n               <Provider value = { options } >\n                  <Feed />\n                </Provider>\n            </Catcher>\n        )\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusBar\":\"styles_statusBar__2DNnl\",\"status\":\"styles_status__2aG0U\",\"online\":\"styles_online__eO62a\",\"offline\":\"styles_offline__1vofJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"like\":\"styles_like__2E9oa\",\"icon\":\"styles_icon__R7fu2\",\"liked\":\"styles_liked__2Bqjd\",\"showLiker\":\"styles_showLiker__2It0s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"styles_post__10vqr\",\"cross\":\"styles_cross__1dr5E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postman\":\"styles_postman__boiJP\",\"image\":\"styles_image__1CMpD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"composer\":\"styles_composer__1FwBx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"styles_spinner__25Apx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"catcher\":\"styles_catcher__3cFX1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed\":\"styles_feed__2RQ-o\"};","module.exports = __webpack_public_path__ + \"static/media/lisa.c0366208.png\";"],"sourceRoot":""}