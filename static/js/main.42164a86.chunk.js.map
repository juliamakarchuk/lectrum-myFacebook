{"version":3,"sources":["components/Post/styles.module.css","components/StatusBar/styles.module.css","components/Composer/styles.module.css","components/Spinner/styles.module.css","components/Feed/styles.module.css","theme/assets/lisa.png","components/HOC/withProfile.js","components/StatusBar/index.jsx","components/Composer/index.jsx","components/Like/index.jsx","components/Post/index.jsx","components/Spinner/index.jsx","instruments/index.js","components/Feed/index.jsx","App.jsx","serviceWorker.js","index.js","components/Like/styles.module.css"],"names":["module","exports","post","cross","statusBar","composer","spinner","feed","__webpack_require__","p","createContext","Provider","Consumer","withProfile","Enhanceable","_Component","WithProfile","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","react_default","a","createElement","context","assign","props","Component","_this$props","avatar","currentUserFirstName","currentUserLastName","className","Styles","src","state","comment","_updateComment","event","setState","target","_handleFormSubmit","preventDefault","_submitComment","_createPost","_submitOnEnter","onSubmit","placeholder","concat","onChange","onKeyPress","type","showLikers","_showLikers","_hideLikers","_likePost","id","_getLikeByMe","_this$props2","likes","some","_ref","firstName","lastName","_getLikeStyles","likeByMe","classNames","icon","defineProperty","liked","_getLikersList","likesJSX","map","_ref2","length","_getLikesDescription","_this$props3","likeStyles","likerList","likesDescription","like","onClick","showLiker","onMouseEnter","onMouseLeave","hideLikers","created","_removePost","moment","unix","format","components_Like","portal","document","getElementById","Spinner","isSpinning","createPortal","delay","duration","undefined","Promise","resolve","setTimeout","getUniqueID","Error","text","possible","i","charAt","Math","floor","random","posts","_setPostsFetchingState","_callee","regenerator_default","wrap","_context","prev","next","utc","toConsumableArray","stop","_callee2","newPosts","_context2","objectSpread","filter","_this2","_this$state","postsJSX","components_Post","Spinner_Spinner","components_StatusBar","components_Composer","options","App","components_Feed","Boolean","window","location","hostname","match","ReactDOM","render","App_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,KAAA,qBAAAC,MAAA,2CCAlBH,EAAAC,QAAA,CAAkBG,UAAA,+CCAlBJ,EAAAC,QAAA,CAAkBI,SAAA,8CCAlBL,EAAAC,QAAA,CAAkBK,QAAA,6CCAlBN,EAAAC,QAAA,CAAkBM,KAAA,0CCDlBP,EAAAC,QAAiBO,EAAAC,EAAuB,iSCGTC,0BAAvBC,aAAUC,aAEZC,EAAc,SAACC,GAClB,gBAAAC,GAAA,SAAAC,IAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAD,GAAAM,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAD,EAAAD,GAAAE,OAAAQ,EAAA,EAAAR,CAAAD,EAAA,EAAAU,IAAA,SAAAC,MAAA,WACa,IAAAC,EAAAT,KACL,OACIU,EAAAC,EAAAC,cAACnB,EAAD,KACE,SAACoB,GAAD,OAAYH,EAAAC,EAAAC,cAACjB,EAADG,OAAAgB,OAAA,GAAiBD,EAAaJ,EAAKM,cAJ7DlB,EAAA,CAAiCmB,+BCgBrBtB,qLAdD,IAAAuB,EACqDjB,KAAKe,MAA1DG,EADAD,EACAC,OAAQC,EADRF,EACQE,qBAAsBC,EAD9BH,EAC8BG,oBACrC,OACOV,EAAAC,EAAAC,cAAA,WAASS,UAAaC,IAAOrC,WAC1ByB,EAAAC,EAAAC,cAAA,cACGF,EAAAC,EAAAC,cAAA,OAAKW,IAAQL,IACbR,EAAAC,EAAAC,cAAA,gBAASO,EAAT,KAFH,OAIGT,EAAAC,EAAAC,cAAA,gBAASQ,EAAT,cATIJ,+BC0DTtB,+MArDX8B,MAAQ,CACJC,QAAS,MAGbC,eAAiB,SAACC,GAEdlB,EAAKmB,SAAS,CACVH,QAASE,EAAME,OAAOrB,WAG9BsB,kBAAoB,SAACH,GACjBA,EAAMI,iBACNtB,EAAKuB,oBAGTA,eAAiB,WAAK,IACVP,EAAYhB,EAAKe,MAAjBC,QAER,IAAIA,EAAS,OAAO,KACpBhB,EAAKM,MAAMkB,YAAYR,GAEvBhB,EAAKmB,SAAS,CACVH,QAAS,QAGjBS,eAAiB,SAACP,GACgB,UAAbA,EAAMpB,MAEnBoB,EAAMI,iBACNtB,EAAKuB,2FAGJ,IACGP,EAAYzB,KAAKwB,MAAjBC,QADHR,EAEoCjB,KAAKe,MAAtCG,EAFHD,EAEGC,OAAQC,EAFXF,EAEWE,qBAChB,OACMT,EAAAC,EAAAC,cAAA,WAASS,UAAcC,IAAOpC,UAC3BwB,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,OAAKW,IAAOL,IACZR,EAAAC,EAAAC,cAAA,QAAMuB,SAAYnC,KAAK8B,mBACrBpB,EAAAC,EAAAC,cAAA,YAAUwB,YAAW,gCAAAC,OACalB,GAClCX,MAAUiB,EACVa,SAAatC,KAAK0B,eAClBa,WAAevC,KAAKkC,iBACpBxB,EAAAC,EAAAC,cAAA,SAAO4B,KAAO,SAAShC,MAAQ,mBAjD/BQ,sDCiGRtB,+MAxFX8B,MAAQ,CACJiB,YAAY,KAGhBC,YAAc,WACVjC,EAAKmB,SAAS,CACVa,YAAY,OAIpBE,YAAc,WACVlC,EAAKmB,SAAS,CACVa,YAAahC,EAAKe,WAI1BoB,UAAY,WAAM,IAAA3B,EAEYR,EAAKM,OAE/B6B,EAJc3B,EAEN2B,WAFM3B,EAEK4B,OAKvBC,aAAc,WAAM,IAAAC,EAC2CtC,EAAKM,MAAzDI,EADS4B,EACT5B,qBAAsBC,EADb2B,EACa3B,oBAE7B,OAHgB2B,EACkCC,MAErCC,KAAK,SAAAC,GAAyB,IAAvBC,EAAuBD,EAAvBC,UAAWC,EAAYF,EAAZE,SAC3B,MACI,GAAAf,OAAGc,EAAH,KAAAd,OAAgBe,KAAhB,GAAAf,OACOlB,EADP,KAAAkB,OAC+BjB,QAI3CiC,eAAiB,WACb,IAAMC,EAAW7C,EAAKqC,eAEtB,OAAOS,IAAWjC,IAAOkC,KAAR1D,OAAA2D,EAAA,EAAA3D,CAAA,GACZwB,IAAOoC,MAAQJ,OAGxBK,eAAiB,WAAM,IACXlB,EAAehC,EAAKe,MAApBiB,WACAO,EAAUvC,EAAKM,MAAfiC,MAEFY,EAAWZ,EAAMa,IAAI,SAAAC,GAAA,IAAEX,EAAFW,EAAEX,UAAWC,EAAbU,EAAaV,SAAUP,EAAvBiB,EAAuBjB,GAAvB,OAC1BnC,EAAAC,EAAAC,cAAA,MAAIL,IAAOsC,GAAX,GAAAR,OACMc,EADN,KAAAd,OACmBe,MAGpB,OAAOJ,EAAMe,QAAUtB,EAAc/B,EAAAC,EAAAC,cAAA,UAAKgD,GAAiB,QAG/DI,qBAAuB,WAAM,IAAAC,EACkCxD,EAAKM,MAAzDI,EADkB8C,EAClB9C,qBAAsBC,EADJ6C,EACI7C,oBAAqB4B,EADzBiB,EACyBjB,MAE5CM,EAAW7C,EAAKqC,eAEtB,OAAmB,IAAhBE,EAAMe,QAAeT,EACpB,GAAAjB,OAAUlB,EAAV,KAAAkB,OAAkCjB,GACV,IAAjB4B,EAAMe,QAAgBT,EAC7B,WAAAjB,OAAkBW,EAAMe,OAAO,EAA/B,UACOT,EACP,WAAAjB,OAAkBW,EAAMe,OAAO,EAA/B,WAEGf,EAAMe,gFAIb,IAAMG,EAAalE,KAAKqD,iBAClBc,EAAYnE,KAAK2D,iBACjBS,EAAmBpE,KAAKgE,uBAE9B,OACItD,EAAAC,EAAAC,cAAA,WAASS,UAAcC,IAAO+C,MAC1B3D,EAAAC,EAAAC,cAAA,QAAMS,UAAc6C,EACpBI,QAAYtE,KAAK4C,WADjB,QAEAlC,EAAAC,EAAAC,cAAA,OAAKS,UAAaC,IAAOiD,WACxBJ,EACGzD,EAAAC,EAAAC,cAAA,QACA4D,aAAiBxE,KAAK0C,YACtB+B,aAAiBzE,KAAK0E,YACpBN,YA1FFpD,+BC8BLtB,qLAnBF,IAAAuB,EAC6GjB,KAAKe,MAA/GU,EADHR,EACGQ,QAASkD,EADZ1D,EACY0D,QAAS/B,EADrB3B,EACqB2B,UAAWgC,EADhC3D,EACgC2D,YAAa/B,EAD7C5B,EAC6C4B,GAAIG,EADjD/B,EACiD+B,MAAO9B,EADxDD,EACwDC,OAAQC,EADhEF,EACgEE,qBAAsBC,EADtFH,EACsFG,oBAC3F,OACYV,EAAAC,EAAAC,cAAA,WAASS,UAAcC,IAAOvC,MAC3B2B,EAAAC,EAAAC,cAAA,QAAMS,UAAcC,IAAOtC,MAAQsF,QAAW,kBAAIM,EAAY/B,MAC7DnC,EAAAC,EAAAC,cAAA,OAAKW,IAAQL,IACbR,EAAAC,EAAAC,cAAA,gBAAAyB,OAASlB,EAAT,KAAAkB,OAAmCjB,GAAnC,KACAV,EAAAC,EAAAC,cAAA,YAAOiE,IAAOC,KAAKH,GAASI,OAAO,qBACnCrE,EAAAC,EAAAC,cAAA,SAAKa,GACLf,EAAAC,EAAAC,cAACoE,EAAD,CACEpC,UAAcA,EACdC,GAAMA,EACNG,MAAQA,YArBfhC,+BCLbiE,EAASC,SAASC,eAAe,WAElBC,mLAEP,IACEC,EAAerF,KAAKe,MAApBsE,WACR,OAAOC,uBACPD,EAAa3E,EAAAC,EAAAC,cAAA,OAAKS,UAAaC,IAAOnC,UAAc,KAAM8F,UAL7BjE,8BCGxBuE,EAAQ,WAAqB,IAApBC,EAAoBpF,UAAA2D,OAAA,QAAA0B,IAAArF,UAAA,GAAAA,UAAA,GAAT,IAC7B,OAAO,IAAIsF,QAAQ,SAACC,GAChBC,WAAWD,EAASH,MAIfK,EAAc,WAAiB,IAAhB9B,EAAgB3D,UAAA2D,OAAA,QAAA0B,IAAArF,UAAA,GAAAA,UAAA,GAAP,GACjC,GAAsB,kBAAX2D,EACP,MAAM,IAAI+B,MAAM,6CAOpB,IAJA,IAAIC,EAAO,GACLC,EACA,iEAEGC,EAAI,EAAGA,EAAIlC,EAAQkC,IACxBF,GAAQC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAASjC,SAGhE,OAAOgC,GC0EIrG,+MAlFX8B,MAAQ,CACJ8E,MAAO,CACH,CAACzD,GAAI,MAAOpB,QAAS,WAAYkD,QAAS,gBAAiB3B,MAAM,IACjE,CAACH,GAAI,MAAOpB,QAAS,QAASkD,QAAS,gBAAiB3B,MAAM,KAElEqC,YAAY,KAGhBkB,uBAAyB,SAAE/E,GACvBf,EAAKmB,SAAS,CACVyD,WAAa7D,OAIrBS,kDAAc,SAAAuE,EAAO/E,GAAP,IAAA1C,EAAA,OAAA0H,EAAA9F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACVpG,EAAK8F,wBAAuB,GACtBxH,EAAO,CACT8D,GAAIgD,IACJlB,QAASE,MAASiC,MAClBrF,UACAuB,MAAO,IAND2D,EAAAE,KAAA,EASJtB,EAAO,MATH,OAWV9E,EAAKmB,SAAS,SAAAkC,GAAA,IAAGwC,EAAHxC,EAAGwC,MAAH,MAAc,CACxBA,MAAK,CAAGvH,GAAHsD,OAAAvC,OAAAiH,EAAA,EAAAjH,CAAYwG,IACjBjB,YAAY,KAbN,wBAAAsB,EAAAK,SAAAR,EAAAxG,iEAiBd4C,gDAAY,SAAAqE,EAAOpE,GAAP,IAAA5B,EAAAE,EAAAC,EAAA8F,EAAA,OAAAT,EAAA9F,EAAA+F,KAAA,SAAAS,GAAA,cAAAA,EAAAP,KAAAO,EAAAN,MAAA,cAAA5F,EAC4CR,EAAKM,MAAlDI,EADCF,EACDE,qBAAsBC,EADrBH,EACqBG,oBAC9BX,EAAK8F,wBAAuB,GAFnBY,EAAAN,KAAA,EAIHtB,EAAM,MAJH,OAMH2B,EAAWzG,EAAKe,MAAM8E,MAAMzC,IAAI,SAAA9E,GAClC,OAAGA,EAAK8D,KAAOA,EACJ/C,OAAAsH,EAAA,EAAAtH,CAAA,GACAf,EADP,CAEIiE,MAAM,CACF,CACIH,GAAIgD,IACJ1C,UAAWhC,EACXiC,SAAUhC,MAKnBrC,IAEX0B,EAAKmB,SAAS,CACV0E,MAAOY,EACP7B,YAAY,IAvBP,wBAAA8B,EAAAH,SAAAC,EAAAjH,iEA2BZ4E,YAAc,SAAC/B,GAAM,IACbyD,EAAU7F,EAAKe,MAAf8E,MACN7F,EAAKmB,SAAS,CACV0E,MAAOA,EAAMe,OAAO,SAAAtI,GAAI,OAAIA,EAAK8D,KAAOA,+EAIpC,IAAAyE,EAAAtH,KAAAuH,EACyBvH,KAAKwB,MAA5B8E,EADFiB,EACEjB,MAAQjB,EADVkC,EACUlC,WAEVmC,EAAWlB,EAAMzC,IAAI,SAAC9E,GACxB,OAAO2B,EAAAC,EAAAC,cAAC6G,EAAD3H,OAAAgB,OAAA,CAAMP,IAAQxB,EAAK8D,IAAS9D,EAA5B,CAAkC6D,UAAc0E,EAAK1E,UAAYgC,YAAgB0C,EAAK1C,iBAGjG,OACIlE,EAAAC,EAAAC,cAAA,WAASS,UAAcC,IAAOlC,MAC1BsB,EAAAC,EAAAC,cAAC8G,EAAD,CAASrC,WAAeA,IACxB3E,EAAAC,EAAAC,cAAC+G,EAAD,MACAjH,EAAAC,EAAAC,cAACgH,EAAD,CAAU3F,YAAgBjC,KAAKiC,cAC9BuF,UAtFExG,8BCJb6G,EAAU,CACZ3G,gBACAC,qBAAsB,OACtBC,oBAAqB,WAGJ0G,mLAGb,OACApH,EAAAC,EAAAC,cAACpB,EAAD,CAAUgB,MAAUqH,GACjBnH,EAAAC,EAAAC,cAACmH,EAAD,cALsB/G,aCFbgH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5H,EAAAC,EAAAC,cAAC2H,EAAD,MAASrD,SAASC,eAAe,SD2H3C,kBAAmBqD,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCElInBhK,EAAAC,QAAA,CAAkBuF,KAAA,qBAAAb,KAAA,qBAAAE,MAAA,sBAAAa,UAAA","file":"static/js/main.42164a86.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"styles_post__10vqr\",\"cross\":\"styles_cross__1dr5E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusBar\":\"styles_statusBar__2DNnl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"composer\":\"styles_composer__1FwBx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"styles_spinner__25Apx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed\":\"styles_feed__2RQ-o\"};","module.exports = __webpack_public_path__ + \"static/media/lisa.c0366208.png\";","//Core\nimport React, { createContext, Component } from 'react';\n\nconst { Provider, Consumer } = createContext();\n\nconst withProfile = (Enhanceable) => {\n   return class WithProfile extends Component {\n       render() {\n           return (\n               <Consumer>\n                {(context)=> <Enhanceable {...context} {...this.props} />}\n               </Consumer>\n           )\n       }\n   }\n}\n\nexport { Provider, Consumer, withProfile }","import React, { Component } from 'react';\n\nimport { withProfile } from '../HOC/withProfile'\n\nimport Styles from './styles.module.css';\n\n\nclass StatusBar extends Component {\n    render () {\n        let { avatar, currentUserFirstName, currentUserLastName} = this.props;\n       return(\n              <section className = {Styles.statusBar}>\n                 <button>\n                    <img src = { avatar }/>\n                    <span> { currentUserFirstName } </span>\n                     &nbsp;\n                    <span> { currentUserLastName } </span>\n                 </button>\n                </section>\n       )\n    }\n}\nexport default withProfile(StatusBar);","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withProfile } from '../HOC/withProfile'\n\nimport Styles from './styles.module.css';\n\n\nclass Composer extends Component{\n    static propTypes = {\n        _createPost: PropTypes.func.isRequired\n     }\n    state = {\n        comment: ''\n    };\n\n    _updateComment = (event) =>{\n        // console.log(event.target.value)\n        this.setState({\n            comment: event.target.value\n        })\n    }\n    _handleFormSubmit = (event) =>{\n        event.preventDefault();\n        this._submitComment();\n    }\n\n    _submitComment = () =>{\n        const { comment } = this.state;\n\n        if(!comment) return null;\n        this.props._createPost(comment);\n\n        this.setState({\n            comment: ''\n        })\n    }\n    _submitOnEnter = (event) => {\n        const enterKey = event.key ==='Enter';\n        if(enterKey) {\n            event.preventDefault();\n            this._submitComment();\n        }\n    }\n    render() {\n        const { comment } = this.state;\n        const { avatar, currentUserFirstName } = this.props;\n        return (\n              <section className = { Styles.composer }>\n                 <section>\n                     <img src = {avatar }/>\n                     <form onSubmit= { this._handleFormSubmit }>\n                       <textarea placeholder = \n                       {`What are you thinking about, ${ currentUserFirstName }`} \n                       value = { comment } \n                       onChange = { this._updateComment } \n                       onKeyPress = { this._submitOnEnter }/>\n                       <input type = \"submit\" value = 'Post'/>\n                    </form>\n                  </section>\n               </section>\n        )\n    }\n}\n\nexport default withProfile(Composer);","import React, { Component } from 'react';\nimport { string, func, arrayOf, shape } from 'prop-types';\nimport classNames from 'classnames';\n\nimport { withProfile } from '../HOC/withProfile';\n\nimport Styles from './styles.module.css';\n\n class Like extends Component {\n    static propTypes = {\n        _likePost: func.isRequired,\n        id:        string.isRequired,\n        likes:     arrayOf(shape({\n                   firstName: string.isRequired,\n                   lastName: string.isRequired\n                   })).isRequired  \n    }\n    state = {\n        showLikers: false\n    }\n\n    _showLikers = () => {\n        this.setState({\n            showLikers: true\n        })\n    }\n\n    _hideLikers = () => {\n        this.setState({\n            showLikers: !this.state\n        })\n    }\n\n    _likePost = () => {\n        \n        const { _likePost, id } = this.props;\n\n        _likePost (id);\n    }\n\n    _getLikeByMe =() => {\n        const {currentUserFirstName, currentUserLastName, likes} = this.props;\n\n        return likes.some(({firstName, lastName})=>{\n            return(\n                `${firstName} ${lastName}` \n                === `${currentUserFirstName} ${currentUserLastName}`\n            )\n        })\n    }\n    _getLikeStyles = () => {\n        const likeByMe = this._getLikeByMe();\n\n        return classNames(Styles.icon, {\n            [Styles.liked]: likeByMe,\n        })\n    }\n    _getLikersList = () => {\n        const { showLikers } = this.state;\n        const { likes } = this.props;\n\n        const likesJSX = likes.map(({firstName, lastName, id})=>\n        (<li key = {id}>\n           {`${firstName} ${lastName}`}\n        </li>));\n\n        return likes.length && showLikers ?  <ul>{likesJSX}</ul> : null;\n    }\n\n    _getLikesDescription = () => {\n        const {currentUserFirstName, currentUserLastName, likes} = this.props;\n\n        const likeByMe = this._getLikeByMe();\n\n        if(likes.length ===1 && likeByMe) {\n            return `${currentUserFirstName} ${currentUserLastName}`\n        } else if (likes.length === 2 && likeByMe){\n            return `You and ${likes.length-1} other`;\n        } else if (likeByMe){\n            return `You and ${likes.length-1} others`;\n        }\n        return likes.length;\n    }\n    render(){\n\n        const likeStyles = this._getLikeStyles();\n        const likerList = this._getLikersList();\n        const likesDescription = this._getLikesDescription();\n\n        return (\n            <section className = { Styles.like }>\n                <span className = { likeStyles } \n                onClick = { this._likePost }>Like</span>\n                <div className = {Styles.showLiker}>\n                {likerList}\n                    <span\n                    onMouseEnter = { this._showLikers }\n                    onMouseLeave = { this.hideLikers }>\n                     {likesDescription}\n                    </span>\n                </div>\n            </section>\n        )\n    }\n}\nexport default withProfile( Like );","import React, {Component} from 'react';\nimport moment from 'moment';\nimport { func, string, number, array } from 'prop-types';\n\nimport { withProfile } from '../HOC/withProfile';\nimport { Consumer } from '../HOC/withProfile';\nimport Like from '../Like'\n\nimport Styles from './styles.module.css';\n\nclass Post extends Component{\n    static propTypes = {\n        id:        string.isRequired,\n        comment:   string.isRequired,\n        created:   string.isRequired,\n        _likePost: func.isRequired,\n        _removePost: func.isRequired,\n        likes:     array.isRequired\n    }\n    render() {\n        const { comment, created, _likePost, _removePost, id, likes, avatar, currentUserFirstName, currentUserLastName} = this.props;\n        return (\n                    <section className = { Styles.post } >\n                       <span className = { Styles.cross } onClick = {()=>_removePost(id)}></span>\n                        <img src = { avatar } />\n                        <a> {`${ currentUserFirstName } ${ currentUserLastName }`} </a>\n                        <time>{moment.unix(created).format('MMMM D h:mm:ss a')}</time>\n                        <p>{ comment }</p>\n                        <Like \n                          _likePost = { _likePost } \n                          id ={ id } \n                          likes={ likes }\n                        />\n                   </section>\n        )\n    }\n}\n\nexport default withProfile(Post);","import React, {Component} from 'react';\nimport { createPortal } from 'react-dom';\n\nimport Styles from './styles.module.css';\n\nconst portal = document.getElementById('spinner');\n\nexport default class Spinner extends Component {\n\n    render () {\n        const { isSpinning } = this.props;\n        return createPortal( \n        isSpinning ? <div className = {Styles.spinner} /> : null, portal)\n\n    }\n}","export const sum = (operand1, operand2) => {\n    if (typeof operand1 !== 'number') {\n        throw new Error('Operand 1 should be a number.');\n    } else if (typeof operand2 !== 'number') {\n        throw new Error('Operand 2 should be a number.');\n    }\n\n    return operand1 + operand2;\n};\n\nexport const delay = (duration = 1000) => {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n};\n\nexport const getUniqueID = (length = 15) => {\n    if (typeof length !== 'number') {\n        throw new Error('The function argument should be a number!');\n    }\n\n    let text = '';\n    const possible\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (let i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return text;\n};\n\nexport const getFullApiUrl = (api, GROUP_ID) => {\n    if (typeof api !== 'string' || typeof GROUP_ID !== 'string') {\n        throw new Error(\n            '\\'api\\' and \\'GROUP_ID\\' arguments passed should be a string!',\n        );\n    }\n\n    return `${api}/${GROUP_ID}`;\n};\n","import React, {Component} from 'react';\nimport moment from 'moment';\n\nimport { withProfile } from '../HOC/withProfile';\nimport StatusBar from '../StatusBar';\nimport Composer from '../Composer';\nimport Post from '../Post';\nimport Spinner from '../Spinner';\n\nimport Styles from './styles.module.css';\nimport { getUniqueID, delay } from '../../instruments/index';\n\nclass Feed extends Component{\n    // constructor () {\n    //     super();\n\n    //     this._createPost = this._createPost.bind(this);\n    //     this._setPostsFetchingState = this._setPostsFetchingState.bind(this);\n    //     this._likePost = this._likePost.bind(this);\n    //     this._removePost = this._removePost.bind(this)\n    // }\n    state = {\n        posts: [\n            {id: '123', comment: 'Hi there', created: '1526825076849', likes:[]},\n            {id: '344', comment: 'Hello', created: '1526825076867', likes:[]}\n        ],\n        isSpinning: false\n    }\n\n    _setPostsFetchingState = ( state ) =>{\n        this.setState({\n            isSpinning : state\n        })\n    }\n\n    _createPost = async (comment) =>{\n        this._setPostsFetchingState(true);\n        const post = {\n            id: getUniqueID(),\n            created: moment().utc(),\n            comment,\n            likes: []\n        };\n\n        await delay (1600);\n\n        this.setState(({ posts })=>({\n            posts: [post, ...posts],\n            isSpinning: false\n        }))\n    }\n    \n    _likePost = async (id) =>{\n       const { currentUserFirstName, currentUserLastName} = this.props;\n       this._setPostsFetchingState(true);\n\n       await delay(1600);\n       \n       const newPosts = this.state.posts.map(post=> {\n           if(post.id === id) {\n               return {\n                   ...post,\n                   likes:[\n                       {\n                           id: getUniqueID(),\n                           firstName: currentUserFirstName,\n                           lastName: currentUserLastName\n                       }\n                   ]\n               }\n           }\n           return post;\n       })\n       this.setState({\n           posts: newPosts,\n           isSpinning: false\n       })\n    }\n\n    _removePost = (id) =>{\n      let { posts } = this.state;\n      this.setState({\n          posts: posts.filter(post => post.id !== id)\n      })\n    }\n\n    render () {\n        const { posts , isSpinning } = this.state;\n\n        const postsJSX = posts.map((post)=>{\n            return <Post key = { post.id } {...post} _likePost = { this._likePost } _removePost = { this._removePost }/>\n        });\n\n        return(\n            <section className = { Styles.feed }>\n                <Spinner isSpinning = { isSpinning }/>\n                <StatusBar />\n                <Composer _createPost = { this._createPost }/>\n                {postsJSX}\n            </section>\n        )\n    }\n}\nexport default withProfile(Feed);","import React, {Component} from 'react';\n\nimport Feed from './components/Feed';\nimport {Provider} from './components/HOC/withProfile';\n\nimport './theme/init.css'\nimport avatar from './theme/assets/lisa.png';\n\nconst options = {\n    avatar,\n    currentUserFirstName: 'Lisa',\n    currentUserLastName: 'Simpson'\n}\n\nexport default class App extends Component {\n\n    render () {\n        return (\n        <Provider value = { options } >\n           <Feed />\n        </Provider>\n        )\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"like\":\"styles_like__2E9oa\",\"icon\":\"styles_icon__R7fu2\",\"liked\":\"styles_liked__2Bqjd\",\"showLiker\":\"styles_showLiker__2It0s\"};"],"sourceRoot":""}