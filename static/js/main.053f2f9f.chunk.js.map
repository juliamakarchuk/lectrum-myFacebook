{"version":3,"sources":["components/Post/styles.module.css","components/StatusBar/styles.module.css","components/Composer/styles.module.css","components/Spinner/styles.module.css","components/Feed/styles.module.css","theme/assets/lisa.png","components/HOC/withProfile.js","components/StatusBar/index.jsx","components/Composer/index.jsx","components/Like/index.jsx","components/Post/index.jsx","components/Spinner/index.jsx","instruments/index.js","components/Feed/index.jsx","App.jsx","serviceWorker.js","index.js","components/Like/styles.module.css"],"names":["module","exports","post","cross","statusBar","composer","spinner","feed","__webpack_require__","p","createContext","Provider","Consumer","StatusBar","react_default","a","createElement","context","className","Styles","src","avatar","currentUserFirstName","currentUserLastName","Component","Composer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","comment","_updateComment","bind","assertThisInitialized","_submitComment","_handleFormSubmit","_submitOnEnter","event","setState","target","value","preventDefault","props","_createPost","key","_this2","onSubmit","placeholder","concat","onChange","onKeyPress","type","Like","showLikers","_getLikeByMe","_getLikeStyles","_likePost","_showLikers","_hideLikers","__getLikersList","_getLikersList","_getLikesDescription","_this$props","id","_this$props2","likes","some","_ref","firstName","lastName","likeByMe","classNames","icon","defineProperty","liked","likesJSX","map","_ref2","length","_this$props3","likeStyles","likerList","likesDescription","like","onClick","showLiker","onMouseEnter","onMouseLeave","hideLikers","Post","created","_removePost","moment","unix","format","Like_Like","assign","portal","document","getElementById","Spinner","isSpinning","console","log","createPortal","delay","duration","arguments","undefined","Promise","resolve","setTimeout","getUniqueID","Error","text","possible","i","charAt","Math","floor","random","Feed","posts","_setPostsFetchingState","utc","toConsumableArray","newPosts","objectSpread","filter","postsJSX","Post_Post","Spinner_Spinner","StatusBar_StatusBar","Composer_Composer","options","App","Feed_Feed","Boolean","window","location","hostname","match","ReactDOM","render","App_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.053f2f9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"styles_post__10vqr\",\"cross\":\"styles_cross__1dr5E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusBar\":\"styles_statusBar__2DNnl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"composer\":\"styles_composer__1FwBx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"styles_spinner__25Apx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed\":\"styles_feed__2RQ-o\"};","module.exports = __webpack_public_path__ + \"static/media/lisa.c0366208.png\";","//Core\nimport { createContext } from 'react';\n\nexport const { Provider, Consumer } = createContext();","import React, { Component } from 'react';\n\nimport {Consumer} from '../HOC/withProfile'\n\nimport Styles from './styles.module.css';\n\n\nexport default class StatusBar extends Component {\n    render () {\n       return(\n        <Consumer>\n           {(context) => (\n              <section className = {Styles.statusBar}>\n                 <button>\n                    <img src = { context.avatar }/>\n                    <span> { context.currentUserFirstName } </span>\n                     &nbsp;\n                    <span> { context.currentUserLastName } </span>\n                 </button>\n                </section>\n            )}\n          </Consumer>\n       )\n    }\n}","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Consumer } from '../HOC/withProfile'\n\nimport Styles from './styles.module.css';\n\n\nexport default class Composer extends Component{\n    static propTypes = {\n        _createPost: PropTypes.func.isRequired\n     }\n    constructor (){\n        super();\n        this._updateComment = this._updateComment.bind(this);\n        this._submitComment = this._submitComment.bind(this);\n        this._handleFormSubmit = this._handleFormSubmit.bind(this);\n        this._submitOnEnter = this._submitOnEnter.bind(this)\n    }\n    state = {\n        comment: ''\n    };\n\n    _updateComment (event) {\n        // console.log(event.target.value)\n        this.setState({\n            comment: event.target.value\n        })\n    }\n    _handleFormSubmit (event) {\n        event.preventDefault();\n        this._submitComment();\n    }\n\n    _submitComment () {\n        const { comment } = this.state;\n\n        if(!comment) return null;\n        this.props._createPost(comment);\n\n        this.setState({\n            comment: ''\n        })\n    }\n    _submitOnEnter (event) {\n        const enterKey = event.key ==='Enter';\n        if(enterKey) {\n            event.preventDefault();\n            this._submitComment();\n        }\n    }\n    render() {\n        const { comment } = this.state;\n        return (\n            <Consumer>\n            { (context) => (\n              <section className = { Styles.composer }>\n                 <section>\n                     <img src = { context.avatar }/>\n                     <form onSubmit= { this._handleFormSubmit }>\n                       <textarea placeholder = \n                       {`What are you thinking about, ${ context.currentUserFirstName }`} \n                       value = { comment } \n                       onChange = { this._updateComment } \n                       onKeyPress = { this._submitOnEnter }/>\n                       <input type = \"submit\" value = 'Post'/>\n                    </form>\n                  </section>\n               </section>\n            )}\n        </Consumer>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { string, func, arrayOf, shape } from 'prop-types';\nimport classNames from 'classnames';\n\nimport Styles from './styles.module.css';\n\nexport default class Like extends Component {\n    static propTypes = {\n        _likePost: func.isRequired,\n        id:        string.isRequired,\n        likes:     arrayOf(shape({\n                   firstName: string.isRequired,\n                   lastName: string.isRequired\n                   })).isRequired  \n    }\n\n    constructor (){\n        super();\n\n        this._getLikeByMe = this._getLikeByMe.bind(this);\n        this._getLikeStyles = this._getLikeStyles.bind(this);\n        this._likePost = this._likePost.bind(this);\n        this._showLikers = this._showLikers.bind(this);\n        this._hideLikers = this._hideLikers.bind(this);\n        this.__getLikersList = this._getLikersList.bind(this);\n        this._getLikesDescription = this._getLikesDescription.bind(this)\n    }\n    \n    state = {\n        showLikers: false\n    }\n\n    _showLikers (){\n        this.setState({\n            showLikers: true\n        })\n    }\n\n    _hideLikers (){\n        this.setState({\n            showLikers: !this.state\n        })\n    }\n\n    _likePost (){\n        \n        const { _likePost, id } = this.props;\n\n        _likePost (id);\n    }\n\n    _getLikeByMe () {\n        const {currentUserFirstName, currentUserLastName, likes} = this.props;\n\n        return likes.some(({firstName, lastName})=>{\n            return(\n                `${firstName} ${lastName}` \n                === `${currentUserFirstName} ${currentUserLastName}`\n            )\n        })\n    }\n    _getLikeStyles () {\n        const likeByMe = this._getLikeByMe();\n\n        return classNames(Styles.icon, {\n            [Styles.liked]: likeByMe,\n        })\n    }\n    _getLikersList () {\n        const { showLikers } = this.state;\n        const { likes } = this.props;\n\n        const likesJSX = likes.map(({firstName, lastName, id})=>\n        (<li key = {id}>\n           {`${firstName} ${lastName}`}\n        </li>));\n\n        return likes.length && showLikers ?  <ul>{likesJSX}</ul> : null;\n    }\n\n    _getLikesDescription (){\n        const {currentUserFirstName, currentUserLastName, likes} = this.props;\n\n        const likeByMe = this._getLikeByMe();\n\n        if(likes.length ===1 && likeByMe) {\n            return `${currentUserFirstName} ${currentUserLastName}`\n        } else if (likes.length === 2 && likeByMe){\n            return `You and ${likes.length-1} other`;\n        } else if (likeByMe){\n            return `You and ${likes.length-1} others`;\n        }\n        return likes.length;\n    }\n    render(){\n\n        const likeStyles = this._getLikeStyles();\n        const likerList = this._getLikersList();\n        const likesDescription = this._getLikesDescription();\n\n        return (\n            <section className = { Styles.like }>\n                <span className = { likeStyles } \n                onClick = { this._likePost }>Like</span>\n                <div className = {Styles.showLiker}>\n                {likerList}\n                    <span\n                    onMouseEnter = { this._showLikers }\n                    onMouseLeave = { this.hideLikers }>\n                     {likesDescription}\n                    </span>\n                </div>\n            </section>\n        )\n    }\n}","import React, {Component} from 'react';\nimport moment from 'moment';\nimport { func, string, number, array } from 'prop-types';\n\nimport { Consumer } from '../HOC/withProfile';\nimport Like from '../Like'\n\nimport Styles from './styles.module.css';\n\nexport default class Post extends Component{\n    static propTypes = {\n        id:        string.isRequired,\n        comment:   string.isRequired,\n        created:   string.isRequired,\n        _likePost: func.isRequired,\n        _removePost: func.isRequired,\n        likes:     array.isRequired\n    }\n    render() {\n        const { comment, created, _likePost, _removePost, id, likes } = this.props;\n        return (\n            <Consumer>\n                {( context ) => (\n                    <section className = { Styles.post } >\n                       <span className = { Styles.cross } onClick = {()=>_removePost(id)}></span>\n                        <img src = { context.avatar } />\n                        <a> {`${ context.currentUserFirstName } ${ context.currentUserLastName }`} </a>\n                        <time>{moment.unix(created).format('MMMM D h:mm:ss a')}</time>\n                        <p>{ comment }</p>\n                        <Like \n                          _likePost = { _likePost } \n                          id ={ id } \n                          likes={ likes }\n                          {...context}\n                        />\n                   </section>\n                )}\n            </Consumer>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { createPortal } from 'react-dom';\n\nimport Styles from './styles.module.css';\n\nconst portal = document.getElementById('spinner');\n\nexport default class Spinner extends Component {\n\n    render () {\n        const { isSpinning } = this.props;\n        console.log(this.props);\n        return createPortal( \n        isSpinning ? <div className = {Styles.spinner} /> : null, portal)\n\n    }\n}","export const sum = (operand1, operand2) => {\n    if (typeof operand1 !== 'number') {\n        throw new Error('Operand 1 should be a number.');\n    } else if (typeof operand2 !== 'number') {\n        throw new Error('Operand 2 should be a number.');\n    }\n\n    return operand1 + operand2;\n};\n\nexport const delay = (duration = 1000) => {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n};\n\nexport const getUniqueID = (length = 15) => {\n    if (typeof length !== 'number') {\n        throw new Error('The function argument should be a number!');\n    }\n\n    let text = '';\n    const possible\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (let i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return text;\n};\n\nexport const getFullApiUrl = (api, GROUP_ID) => {\n    if (typeof api !== 'string' || typeof GROUP_ID !== 'string') {\n        throw new Error(\n            '\\'api\\' and \\'GROUP_ID\\' arguments passed should be a string!',\n        );\n    }\n\n    return `${api}/${GROUP_ID}`;\n};\n","import React, {Component} from 'react';\nimport moment from 'moment';\n\nimport StatusBar from '../StatusBar'\nimport Composer from '../Composer';\nimport Post from '../Post';\nimport Spinner from '../Spinner';\n\nimport Styles from './styles.module.css';\nimport { getUniqueID, delay } from '../../instruments/index';\n\nexport default class Feed extends Component{\n    constructor () {\n        super();\n\n        this._createPost = this._createPost.bind(this);\n        this._setPostsFetchingState = this._setPostsFetchingState.bind(this);\n        this._likePost = this._likePost.bind(this);\n        this._removePost = this._removePost.bind(this)\n    }\n    state = {\n        posts: [\n            {id: '123', comment: 'Hi there', created: '1526825076849', likes:[]},\n            {id: '344', comment: 'Hello', created: '1526825076867', likes:[]}\n        ],\n        isSpinning: false\n    }\n\n    _setPostsFetchingState ( state ) {\n        this.setState({\n            isSpinning : state\n        })\n    }\n\n    async _createPost (comment){\n        this._setPostsFetchingState(true);\n        const post = {\n            id: getUniqueID(),\n            created: moment().utc(),\n            comment,\n            likes: []\n        };\n\n        await delay (1600);\n\n        this.setState(({ posts })=>({\n            posts: [post, ...posts],\n            isSpinning: false\n        }))\n    }\n    \n    async _likePost (id) {\n       const { currentUserFirstName, currentUserLastName} = this.props;\n       this._setPostsFetchingState(true);\n\n       await delay(1600);\n       \n       const newPosts = this.state.posts.map(post=> {\n           if(post.id === id) {\n               return {\n                   ...post,\n                   likes:[\n                       {\n                           id: getUniqueID(),\n                           firstName: currentUserFirstName,\n                           lastName: currentUserLastName\n                       }\n                   ]\n               }\n           }\n           return post;\n       })\n       this.setState({\n           posts: newPosts,\n           isSpinning: false\n       })\n    }\n\n    _removePost (id) {\n      this.setState({\n          posts: this.state.posts.filter(post => post.id !== id)\n      })\n    }\n\n    render () {\n        console.log('props',this.props)\n        const { posts } = this.state;\n\n        const postsJSX = posts.map((post)=>{\n            return <Post key = { post.id } {...post} _likePost = { this._likePost } _removePost = { this._removePost }/>\n        });\n\n        return(\n            <section className = { Styles.feed }>\n                <Spinner isSpinning = { this.state.isSpinning }/>\n                <StatusBar />\n                <Composer _createPost = { this._createPost }/>\n                {postsJSX}\n            </section>\n        )\n    }\n}","import React, {Component} from 'react';\n\nimport Feed from './components/Feed';\nimport {Provider} from './components/HOC/withProfile';\n\nimport './theme/init.css'\nimport avatar from './theme/assets/lisa.png';\n\nconst options = {\n    avatar,\n    currentUserFirstName: 'Lisa',\n    currentUserLastName: 'Simpson'\n}\n\nexport default class App extends Component {\n\n    render () {\n        return (\n        <Provider value = { options } >\n           <Feed  {...options}/>\n        </Provider>\n        )\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"like\":\"styles_like__2E9oa\",\"icon\":\"styles_icon__R7fu2\",\"liked\":\"styles_liked__2Bqjd\",\"showLiker\":\"styles_showLiker__2It0s\"};"],"sourceRoot":""}