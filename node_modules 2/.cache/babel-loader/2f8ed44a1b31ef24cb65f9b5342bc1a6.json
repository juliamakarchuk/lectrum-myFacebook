{"ast":null,"code":"import _objectSpread from \"/Users/admin/Documents/GitHub/lectrum-myFacebook/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/admin/Documents/GitHub/lectrum-myFacebook/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/admin/Documents/GitHub/lectrum-myFacebook/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/admin/Documents/GitHub/lectrum-myFacebook/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/admin/Documents/GitHub/lectrum-myFacebook/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Documents/GitHub/lectrum-myFacebook/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Documents/GitHub/lectrum-myFacebook/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Documents/GitHub/lectrum-myFacebook/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Documents/GitHub/lectrum-myFacebook/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/admin/Documents/GitHub/lectrum-myFacebook/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/admin/Documents/GitHub/lectrum-myFacebook/src/components/Feed/index.jsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport StatusBar from '../StatusBar';\nimport Composer from '../Composer';\nimport Post from '../Post';\nimport Spinner from '../Spinner';\nimport Styles from './styles.module.css';\nimport { getUniqueID, delay } from '../../instruments/index';\n\nvar Feed =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Feed, _Component);\n\n  function Feed() {\n    var _this;\n\n    _classCallCheck(this, Feed);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Feed).call(this));\n    _this.state = {\n      posts: [{\n        id: '123',\n        comment: 'Hi there',\n        created: '1526825076849',\n        likes: []\n      }, {\n        id: '344',\n        comment: 'Hello',\n        created: '1526825076867',\n        likes: []\n      }],\n      isSpinning: false\n    };\n    _this._createPost = _this._createPost.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._setPostsFetchingState = _this._setPostsFetchingState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._likePost = _this._likePost.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._removePost = _this._removePost.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Feed, [{\n    key: \"_setPostsFetchingState\",\n    value: function _setPostsFetchingState(state) {\n      this.setState({\n        isSpinning: state\n      });\n    }\n  }, {\n    key: \"_createPost\",\n    value: function () {\n      var _createPost2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(comment) {\n        var post;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this._setPostsFetchingState(true);\n\n                post = {\n                  id: getUniqueID(),\n                  created: moment().utc(),\n                  comment: comment,\n                  likes: []\n                };\n                _context.next = 4;\n                return delay(1600);\n\n              case 4:\n                this.setState(function (_ref) {\n                  var posts = _ref.posts;\n                  return {\n                    posts: [post].concat(_toConsumableArray(posts)),\n                    isSpinning: false\n                  };\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function _createPost(_x) {\n        return _createPost2.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"_likePost\",\n    value: function () {\n      var _likePost2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id) {\n        var _this$props, currentUserFirstName, currentUserLastName, newPosts;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this$props = this.props, currentUserFirstName = _this$props.currentUserFirstName, currentUserLastName = _this$props.currentUserLastName;\n\n                this._setPostsFetchingState(true);\n\n                _context2.next = 4;\n                return delay(1600);\n\n              case 4:\n                newPosts = this.state.posts.map(function (post) {\n                  if (post.id === id) {\n                    return _objectSpread({}, post, {\n                      likes: [{\n                        id: getUniqueID(),\n                        firstName: currentUserFirstName,\n                        lastName: currentUserLastName\n                      }]\n                    });\n                  }\n\n                  return post;\n                });\n                this.setState({\n                  posts: newPosts,\n                  isSpinning: false\n                });\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function _likePost(_x2) {\n        return _likePost2.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"_removePost\",\n    value: function _removePost(id) {\n      var arr = this.state.posts.filter(function (post) {\n        return post.id === id;\n      });\n      this.setState({\n        posts: this.sta\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('props', this.props);\n      var posts = this.state.posts;\n      var postsJSX = posts.map(function (post) {\n        return React.createElement(Post, Object.assign({\n          key: post.id\n        }, post, {\n          _likePost: _this2._likePost,\n          _removePost: _this2._removePost,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"section\", {\n        className: Styles.feed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        isSpinning: this.state.isSpinning,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(StatusBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(Composer, {\n        _createPost: this._createPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), postsJSX);\n    }\n  }]);\n\n  return Feed;\n}(Component);\n\nexport { Feed as default };","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/lectrum-myFacebook/src/components/Feed/index.jsx"],"names":["React","Component","moment","StatusBar","Composer","Post","Spinner","Styles","getUniqueID","delay","Feed","state","posts","id","comment","created","likes","isSpinning","_createPost","bind","_setPostsFetchingState","_likePost","_removePost","setState","post","utc","props","currentUserFirstName","currentUserLastName","newPosts","map","firstName","lastName","arr","filter","sta","console","log","postsJSX","feed"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport moment from 'moment';\n\nimport StatusBar from '../StatusBar'\nimport Composer from '../Composer';\nimport Post from '../Post';\nimport Spinner from '../Spinner';\n\nimport Styles from './styles.module.css';\nimport { getUniqueID, delay } from '../../instruments/index';\n\nexport default class Feed extends Component{\n    constructor () {\n        super();\n\n        this._createPost = this._createPost.bind(this);\n        this._setPostsFetchingState = this._setPostsFetchingState.bind(this);\n        this._likePost = this._likePost.bind(this);\n        this._removePost = this._removePost.bind(this)\n    }\n    state = {\n        posts: [\n            {id: '123', comment: 'Hi there', created: '1526825076849', likes:[]},\n            {id: '344', comment: 'Hello', created: '1526825076867', likes:[]}\n        ],\n        isSpinning: false\n    }\n\n    _setPostsFetchingState ( state ) {\n        this.setState({\n            isSpinning : state\n        })\n    }\n\n    async _createPost (comment){\n        this._setPostsFetchingState(true);\n        const post = {\n            id: getUniqueID(),\n            created: moment().utc(),\n            comment,\n            likes: []\n        };\n\n        await delay (1600);\n\n        this.setState(({ posts })=>({\n            posts: [post, ...posts],\n            isSpinning: false\n        }))\n    }\n    \n    async _likePost (id) {\n       const { currentUserFirstName, currentUserLastName} = this.props;\n       this._setPostsFetchingState(true);\n\n       await delay(1600);\n       \n       const newPosts = this.state.posts.map(post=> {\n           if(post.id === id) {\n               return {\n                   ...post,\n                   likes:[\n                       {\n                           id: getUniqueID(),\n                           firstName: currentUserFirstName,\n                           lastName: currentUserLastName\n                       }\n                   ]\n               }\n           }\n           return post;\n       })\n       this.setState({\n           posts: newPosts,\n           isSpinning: false\n       })\n    }\n\n    _removePost (id) {\n      let arr = this.state.posts.filter(post => post.id === id);\n      this.setState({\n          posts: this.sta\n      })\n    }\n\n    render () {\n        console.log('props',this.props)\n        const { posts } = this.state;\n\n        const postsJSX = posts.map((post)=>{\n            return <Post key = { post.id } {...post} _likePost = { this._likePost } _removePost = { this._removePost }/>\n        });\n\n        return(\n            <section className = { Styles.feed }>\n                <Spinner isSpinning = { this.state.isSpinning }/>\n                <StatusBar />\n                <Composer _createPost = { this._createPost }/>\n                {postsJSX}\n            </section>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}