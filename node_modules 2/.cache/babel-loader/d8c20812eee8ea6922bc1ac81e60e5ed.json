{"ast":null,"code":"export var sum = function sum(operand1, operand2) {\n  if (typeof operand1 !== 'number') {\n    throw new Error('Operand 1 should be a number.');\n  } else if (typeof operand2 !== 'number') {\n    throw new Error('Operand 2 should be a number.');\n  }\n\n  return operand1 + operand2;\n};\nexport var delay = function delay() {\n  var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;\n  return new Promise(function (resolve) {\n    setTimeout(resolve, duration);\n  });\n};\nexport var getUniqueID = function getUniqueID() {\n  var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 15;\n\n  if (typeof length !== 'number') {\n    throw new Error('The function argument should be a number!');\n  }\n\n  var text = '';\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (var i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n};\nexport var getFullApiUrl = function getFullApiUrl(api, GROUP_ID) {\n  if (typeof api !== 'string' || typeof GROUP_ID !== 'string') {\n    throw new Error('\\'api\\' and \\'GROUP_ID\\' arguments passed should be a string!');\n  }\n\n  return \"\".concat(api, \"/\").concat(GROUP_ID);\n};","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/lectrum-myFacebook/src/instruments/index.js"],"names":["sum","operand1","operand2","Error","delay","duration","Promise","resolve","setTimeout","getUniqueID","length","text","possible","i","charAt","Math","floor","random","getFullApiUrl","api","GROUP_ID"],"mappings":"AAAA,OAAO,IAAMA,GAAG,GAAG,SAANA,GAAM,CAACC,QAAD,EAAWC,QAAX,EAAwB;AACvC,MAAI,OAAOD,QAAP,KAAoB,QAAxB,EAAkC;AAC9B,UAAM,IAAIE,KAAJ,CAAU,+BAAV,CAAN;AACH,GAFD,MAEO,IAAI,OAAOD,QAAP,KAAoB,QAAxB,EAAkC;AACrC,UAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACH;;AAED,SAAOF,QAAQ,GAAGC,QAAlB;AACH,CARM;AAUP,OAAO,IAAME,KAAK,GAAG,SAARA,KAAQ,GAAqB;AAAA,MAApBC,QAAoB,uEAAT,IAAS;AACtC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC5BC,IAAAA,UAAU,CAACD,OAAD,EAAUF,QAAV,CAAV;AACH,GAFM,CAAP;AAGH,CAJM;AAMP,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAc,GAAiB;AAAA,MAAhBC,MAAgB,uEAAP,EAAO;;AACxC,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC5B,UAAM,IAAIP,KAAJ,CAAU,2CAAV,CAAN;AACH;;AAED,MAAIQ,IAAI,GAAG,EAAX;AACA,MAAMC,QAAQ,GACR,gEADN;;AAGA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAApB,EAA4BG,CAAC,EAA7B,EAAiC;AAC7BF,IAAAA,IAAI,IAAIC,QAAQ,CAACE,MAAT,CAAgBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,QAAQ,CAACF,MAApC,CAAhB,CAAR;AACH;;AAED,SAAOC,IAAP;AACH,CAdM;AAgBP,OAAO,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAMC,QAAN,EAAmB;AAC5C,MAAI,OAAOD,GAAP,KAAe,QAAf,IAA2B,OAAOC,QAAP,KAAoB,QAAnD,EAA6D;AACzD,UAAM,IAAIjB,KAAJ,CACF,+DADE,CAAN;AAGH;;AAED,mBAAUgB,GAAV,cAAiBC,QAAjB;AACH,CARM","sourcesContent":["export const sum = (operand1, operand2) => {\n    if (typeof operand1 !== 'number') {\n        throw new Error('Operand 1 should be a number.');\n    } else if (typeof operand2 !== 'number') {\n        throw new Error('Operand 2 should be a number.');\n    }\n\n    return operand1 + operand2;\n};\n\nexport const delay = (duration = 1000) => {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n};\n\nexport const getUniqueID = (length = 15) => {\n    if (typeof length !== 'number') {\n        throw new Error('The function argument should be a number!');\n    }\n\n    let text = '';\n    const possible\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (let i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return text;\n};\n\nexport const getFullApiUrl = (api, GROUP_ID) => {\n    if (typeof api !== 'string' || typeof GROUP_ID !== 'string') {\n        throw new Error(\n            '\\'api\\' and \\'GROUP_ID\\' arguments passed should be a string!',\n        );\n    }\n\n    return `${api}/${GROUP_ID}`;\n};\n"]},"metadata":{},"sourceType":"module"}